@page "/callalert"

@using Bizz.Entities.Models;
@using Bizz.DataService.Services;
@using System.Data;
@inject ProductService productService;
@using Microsoft.AspNetCore.Components.Forms


<h3>Component1</h3>

@if (customers == null)
{
    <p>Loading...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                @foreach (DataColumn column in dataTable.Columns)
                {
                    <th>@column.ColumnName</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (DataRow row in dataTable.Rows)
            {
                <tr>
                    @foreach (DataColumn column in dataTable.Columns)
                    {
                        <td>@row[column]</td>
                    }
                </tr>
            }
        </tbody>
    </table>

    @* <table class="table">
        <thead>
            <tr>
                @foreach (var property in typeof(Customer).GetProperties())
                {
                    <th>@property.Name</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in customers)
            {
                <tr>
                    @foreach (var property in typeof(Customer).GetProperties())
                    {
                        <td>@property.GetValue(customer)</td>
                    }
                </tr>
            }
        </tbody>
    </table> *@
}


@if (customers == null)
{
    <p>Loading...</p>
}
else
{


    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>PanNo</th>
                <th>GstNo</th>
                <th>FirstName</th>
            </tr>
        </thead>
        <tbody>


            @foreach (var cus in customers)
            {
                <tr>
                    <td>@cus.Title</td>
                    <td>@cus.PanNo</td>
                    <td>@cus.GstNo</td>
                    <td>@cus.FirstName</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Customer> customers;
    private DataTable dataTable;
  

    private async Task<DataTable> GetDataTable()
    {
        // Your logic to retrieve the DataTable
        // ...productService.GetDataTable();
        dataTable = await productService.GetDataTable();
        Console.WriteLine($"Number of rows in DataTable: {dataTable.Rows.Count}");
        return dataTable;
    }

    protected override async Task OnInitializedAsync()
    {
        dataTable = await GetDataTable();
        customers = await productService.MapDataTableToModel<Customer>(dataTable);
        // Add debug statement
        Console.WriteLine($"Number of customers in the list: {customers.Count}");
        if (customers.Count > 0)
        {
            var firstCustomer = customers[0];
            Console.WriteLine($"First customers: {firstCustomer.Title}, {firstCustomer.PanNo}, {firstCustomer.GstNo}, {firstCustomer.FirstName}");
        }
    }
}
